// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/xnpltn/hcc/internal/models"
import "fmt"

func ChangePasswordPage(user models.User) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>HCC | Reset Password</title><link rel=\"shortcut icon\" href=\"/static/images/logo.svg\" type=\"image/x-icon\"><link href=\"/static/css/styles.css\" rel=\"stylesheet\"><script src=\"/static/js/app.js\" defer></script><script src=\"/static/js/htmx.min.js\" defer></script><link href=\"/static/css/custom.css\" rel=\"stylesheet\"></head><body class=\"px-5 pb-10\"><header class=\"py-4 px-4 flex justify-center items-center\"><div class=\"container mx-auto flex justify-center flex-col items-center\"><img src=\"/static/images/logo.svg\" class=\"h-32 w-32 rounded bg-blue-900\"><h3 class=\"mt-2 text-lg md:text-xl font-bold\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs("@happycloudcomputing")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/templates/pages/password.templ`, Line: 23, Col: 75}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</h3></div></header><main><section class=\"flex flex-col items-center gap-5\"><h1 class=\"text-center my-5 text-2xl font-bold\">Change Password</h1><form hx-post=\"/reset-pass\" hx-encoding=\"multipart/form-data\" hx-vals=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(fmt.Sprintf(`"email":"%s", "id":"%s"`, user.Email, user.ID)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-indicator=\"#loading\"><div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\"><div class=\"md:col-span-1\"><label for=\"password\" class=\"quote-form-label\">New Password</label> <input type=\"password\" id=\"password\" minlength=\"8\" name=\"password\" placeholder=\"password\" class=\"quote-form-field\"></div><div class=\"md:col-span-1\"><label for=\"passwordconfirm\" class=\"quote-form-label\">Confirn Password</label> <input type=\"password\" id=\"passwordconfirm\" minlength=\"8\" name=\"passwordconfirm\" placeholder=\"Confirn Password\" class=\"quote-form-field\"></div></div><div class=\"mt-4\"><button type=\"submit\" class=\"inline-flex justify-center w-full py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">Change Password</button> <span class=\"htmx-indicator\" id=\"loading\">Please wait...</span></div></form></section></main></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
